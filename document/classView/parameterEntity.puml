@startuml

package domain.model.character.parameter {
class ParameterList {
    - ArrayList<Parameter> parameterList
    + add(Parameter parameter)
    + ArrayList<Parameter> get()
    + List<Parameter> getCharactristicsParameterList()
    + List<Parameter> getStatusList()
    + List<Parameter> getInvestigatorSkillList()
    + List<Parameter> getWeaponSkillList()
}


class Parameter {
    - int id;
    - ParameterPattern parameterPattern;
    - int parameter;
    - String diceParameter;
}
class DefaultParameter {
    - int param
}

class DiceValueParameter {
    - String diceValue
}

class ParameterPattern {
    - ParameterType parameterType;
    - int defaultValue;
    + int getSubParameterTypeValue()
    + String getName()
    + int getInitValue()
}
enum ParameterType {
    - int id
    - String name
    - int initValue
    + int getId()
    + ParameterType getType(final int id)
}

class CharactristicsParameter {
    - CharactristicsType charactristicsType
}
enum CharactristicsType {
    - int id
    - String name
    - int initValue
    + int getId()
    + ParameterType getType(final int id)
}
class SanityPointsParameter {
}
class MagicPointsParameter {
}
class HitPointsParameter {
}
class InvestigatorSkillParameter {
    - InvestigatorSkillType investigatorSkillType
}
enum InvestigatorSkillType {
    - int id
    - String name
    - int initValue
    + int getId()
    + InvestigatorSkillType getType(final int id)
}
class WeaponParameter {
    - WeaponType weaponType
}
enum WeaponType {
    - int id
    - String name
    - int initValue
    + int getId()
    + WeaponType getType(final int id)
}

ParameterList <.. Parameter

Parameter <.. ParameterPattern
Parameter <-- DefaultParameter
Parameter <-- DiceValueParameter
ParameterPattern <.. ParameterType

ParameterPattern <-- CharactristicsParameter
CharactristicsParameter <.. CharactristicsType

ParameterPattern <-- SanityPointsParameter
ParameterPattern <-- MagicPointsParameter
ParameterPattern <-- HitPointsParameter
ParameterPattern <-- InvestigatorSkillParameter
InvestigatorSkillParameter <.. InvestigatorSkillType
ParameterPattern <-- WeaponParameter
WeaponParameter <.. WeaponType

}

package service {

  class ParameterFactory {
    + Parameter createDefaultParameter(int id, ParameterPattern parameterPattern, int param)
    + Parameter createDiceValueParameter(int id, ParameterPattern parameterPattern, String diceValue)
  }
  class ParameterPatternFactory {
    - CharactristicsParameter createCharacteristics(int defaultValue, CharactristicsType charactristicsType)
    - SanityPointsParameter createSanityPoints(int defaultValue)
    - MagicPointsParameter createMagicPoints(int defaultValue)
    - HitPointsParameter createHitPoints(int defaultValue)
    - InvestigatorSkillParameter createInvestigatorSkill(int defaultValue, InvestigatorSkillType type)
    - WeaponParameter createWeapons(int defaultValue, WeaponType weaponType)
  }
  class ParameterListFactory {
    + ParameterFactory parameterFactory
    + ParameterPatternFactory parameterPatternFactory
    - ParameterList createInitialParameter()
  }

  ParameterListFactory <.. ParameterFactory
  ParameterListFactory <.. ParameterPatternFactory
}

ParameterListFactory <.. ParameterList
ParameterFactory <.. Parameter

@enduml
